name: Build and Push Docker Image to Harbor

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Incremental Tag
        env:
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          NEW_TAG="1.$RUN_NUMBER"
          echo "New Tag: $NEW_TAG"
          echo "IMAGE_TAG=192.168.2.184/momo/front:$NEW_TAG" >> $GITHUB_ENV

      - name: Debug IMAGE_TAG
        run: |
          echo "IMAGE_TAG is set to: $IMAGE_TAG"

      - name: Build and Push Docker Image to Harbor
        env:
          HARBOR_USERNAME: "admin"
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
        run: |
          docker login -u "$HARBOR_USERNAME" -p "$HARBOR_PASSWORD" 192.168.2.184
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

  vulnerability-scan:
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: Trigger Harbor Vulnerability Scan
        env:
          HARBOR_URL: "192.168.2.184"
          HARBOR_USERNAME: "admin"
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
          IMAGE_NAME: "momo/front"
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          curl -u "$HARBOR_USERNAME:$HARBOR_PASSWORD" -X POST "http://$HARBOR_URL/api/v2.0/projects/momo/repositories/front/artifacts/$IMAGE_TAG/scan"

      - name: Get Harbor Scan Results
        env:
          HARBOR_URL: "192.168.2.184"
          HARBOR_USERNAME: "admin"
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
          IMAGE_NAME: "momo/front"
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          sleep 10  # 스캔이 완료될 시간을 기다림
          RESULT=$(curl -u "$HARBOR_USERNAME:$HARBOR_PASSWORD" -s "http://$HARBOR_URL/api/v2.0/projects/momo/repositories/front/artifacts/$IMAGE_TAG?vulnerabilities=true")
          
          CRITICAL_COUNT=$(echo $RESULT | jq '[.scan_overview["application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0"].summary.Critical] | add')
          HIGH_COUNT=$(echo $RESULT | jq '[.scan_overview["application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0"].summary.High] | add')

          echo "Critical: $CRITICAL_COUNT, High: $HIGH_COUNT"

      - name: Send Scan Report to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE="Trivy Scan Results:\nCritical: $CRITICAL_COUNT\nHigh: $HIGH_COUNT"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"$MESSAGE\"}" $SLACK_WEBHOOK_URL

